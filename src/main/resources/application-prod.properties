server.port=8082

configuration.value1=111
value2=222

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false

error.url=error

mqtt.brokerHost=192.168.223.130
mqtt.port=1883
mqtt.username=testuser
mqtt.password=123456

mqtt.topic=lalala

#在Spring Boot中默认配置了ERROR、WARN和INFO级别的日志输出到控制台。我们可以通过两种方式切换至DEBUG级别
#在运行命令后加入--debug标志，如：java -jar myapp.jar --debug
#在application.properties中配置debug=true，该属性置为true的时候，核心Logger（包含嵌入式容器、hibernate、spring）会输出更多内容
#但是你自己应用的日志并不会输出为DEBUG级别。
#debug=true
#spring.output.ansi.enabled=detect
#如果只配置 logging.file，会在项目的指定路径下生成一个 xxx.log 日志文件。
#如果只配置 logging.path，在 /var/log文件夹生成一个日志文件为spring.log
#二者不能同时使用，如若同时使用，则只有logging.file生效
#默认情况下，日志文件的大小达到10MB时会切分一次
#logging.path=E://sblog
logging.file=/var/log/sb.log
#配置格式：logging.level.*=LEVEL
#logging.level：日志级别控制前缀，*为包名或Logger名
#LEVEL：选项TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
#logging.level.yangy_coder.springboot.controllers=DEBUG
#logging.level.root=DEBUG

logging.pattern.console=%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n
logging.pattern.file=%d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n
